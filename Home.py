import streamlit as st
import pandas as pd
import numpy as np
from scipy import stats
import matplotlib.pyplot as plt
import plotly.graph_objects as go
import plotly.express as px


st.set_page_config(page_title="Finance Analisys", layout="wide")

#--------------------------------------------------

st.image("logo.svg", width=150)

df = pd.read_csv("dataset_finance.csv")

df.columns = df.columns.str.strip()

st.title("An√°lise de Reclama√ß√µes de Consumidores da Amazon")
st.write("""
Esta an√°lise explora reclama√ß√µes de consumidores sobre produtos financeiros nos Estados Unidos. A base de dados inclui informa√ß√µes sobre empresas, tipos de produto, motivos de insatisfa√ß√£o, localiza√ß√£o e tempo de resolu√ß√£o. O foco √© identificar padr√µes nos sentimentos dos clientes e propor melhorias que otimizem a experi√™ncia do consumidor, com aten√ß√£o especial a empresas como a Amazon, se presentes no conjunto de dados.
""")

st.markdown("<h1 style='color: #2aa0d3;'>1Ô∏è‚É£ Apresenta√ß√£o das vari√°veis</h1>", unsafe_allow_html=True)
st.subheader("Amostra dos Dados")
st.write(df.head())


dados_tipos = {
    "Vari√°vel": [
        "ID", "Company", "Product", "Issue", "State", "Submitted via",
        "Date received", "Date resolved", "Timely Reponse", "Consumer disputed?",
        "State Name", "Resolution Time(In days)", "Year", "QTR"
    ],
    "Tipo de Vari√°vel": [
        "Identificador", "Qualitativa", "Qualitativa", "Qualitativa", "Qualitativa", "Qualitativa",
        "Data(Qualitativa)", "Data (Qualitativa)", "Tempo (Qualitativa)", "Qualitativa",
        "Categorica", "Quantitativa", "Data", "Categorica"
    ]
}

df_tipos = pd.DataFrame(dados_tipos)

# Exibindo no Streamlit
st.subheader("Classifica√ß√£o das Vari√°veis")
st.dataframe(df_tipos)


st.markdown("<h1 style='color: #2aa0d3;'>Questionamentos e Hip√≥teses</h1>", unsafe_allow_html=True)

st.write("""
1. Qual o tempo m√©dio de resolu√ß√£o das reclama√ß√µes?
2. Quais os tr√™s produtos mais reclamados?
3. Existe correla√ß√£o entre o tempo de resposta e a contesta√ß√£o pelo consumidor?
4. Como os tempos de resolu√ß√£o est√£o distribu√≠dos? Eles seguem uma distribui√ß√£o normal?
5. Reclama√ß√µes feitas em certos estados t√™m tempos m√©dios de resolu√ß√£o maiores?
6. Consumidores de certos produtos tendem a contestar mais a resposta da empresa?
""")

#-----------------------
st.markdown("<h1 style='color: #2aa0d3;'>üìä Intervalo de Confian√ßa do Tempo de Resolu√ß√£o</h1>", unsafe_allow_html=True)


df['Resolution time(in days)'] = pd.to_numeric(df['Resolution time(in days)'], errors='coerce')
res_time = df['Resolution time(in days)'].dropna()
df['Resolution time(in days)'] = pd.to_numeric(df['Resolution time(in days)'], errors='coerce')
df['Resolution time(in days)'] = df['Resolution time(in days)'].apply(lambda x: max(x, 0) if pd.notnull(x) else x)

res_time = df['Resolution time(in days)'].dropna()

media = res_time.mean()
std = res_time.std(ddof=1)
n = len(res_time)

conf = st.slider("Selecione o n√≠vel de confian√ßa (%)", 80, 99, 95)
alpha = 1 - (conf / 100)
z = stats.norm.ppf(1 - alpha/2)
margem_erro = z * (std / np.sqrt(n))
lim_inf = media - margem_erro
lim_sup = media + margem_erro

st.write(f"üîπ M√©dia do tempo de resolu√ß√£o: **{media:.2f} dias**")
st.write(f"üîπ Intervalo de Confian√ßa ({conf}%): de **{lim_inf:.2f}** at√© **{lim_sup:.2f}** dias")
st.write(f"üîπ Margem de erro: ¬± **{margem_erro:.2f} dias**")

fig = go.Figure()

fig.add_trace(go.Histogram(
    x=res_time,
    nbinsx=40,
    name='Tempo de Resolu√ß√£o',
    marker_color='lightblue',
    opacity=0.75
))

fig.add_vline(x=lim_inf, line_dash="dash", line_color="red", annotation_text="Limite Inferior", annotation_position="top left")
fig.add_vline(x=lim_sup, line_dash="dash", line_color="green", annotation_text="Limite Superior", annotation_position="top right")
fig.add_vline(x=media, line_color="black", annotation_text="M√©dia", annotation_position="top")

fig.update_layout(
    title="Distribui√ß√£o do Tempo de Resolu√ß√£o com Intervalo de Confian√ßa",
    xaxis_title="Dias",
    yaxis_title="Frequ√™ncia",
    bargap=0.1
)

st.plotly_chart(fig, use_container_width=True)

st.markdown("""
    <h4 style="color: #2aa0d3;">Qual o tempo m√©dio de resolu√ß√£o das reclama√ß√µes?</h4>
    <p>O tempo m√©dio de resolu√ß√£o √© de 2 dias, sendo 95% dos casos resolvidos entre 1.9 e 2.1 dias</p>
    """, unsafe_allow_html=True)

