import streamlit as st
import pandas as pd
import numpy as np
from scipy import stats
import matplotlib.pyplot as plt
import plotly.graph_objects as go
import plotly.express as px
import seaborn as sns


st.set_page_config(page_title="Finance Analisys", layout="wide")

#--------------------------------------------------

st.image("logo.svg", width=150)

df = pd.read_csv("dataset_finance.csv")

df.columns = df.columns.str.strip()

st.title("An√°lise de Reclama√ß√µes de Consumidores da Amazon")
st.write("""
Esta an√°lise explora reclama√ß√µes de consumidores sobre produtos financeiros nos Estados Unidos. A base de dados inclui informa√ß√µes sobre empresas, tipos de produto, motivos de insatisfa√ß√£o, localiza√ß√£o e tempo de resolu√ß√£o. O foco √© identificar padr√µes nos sentimentos dos clientes e propor melhorias que otimizem a experi√™ncia do consumidor, com aten√ß√£o especial a empresas como a Amazon, se presentes no conjunto de dados.
""")

st.markdown("<h1 style='color: #2aa0d3;'>1Ô∏è‚É£ Apresenta√ß√£o das vari√°veis</h1>", unsafe_allow_html=True)
st.subheader("Amostra dos Dados")
st.write(df.head())


dados_tipos = {
    "Vari√°vel": [
        "ID", "Company", "Product", "Issue", "State", "Submitted via",
        "Date received", "Date resolved", "Timely Reponse", "Consumer disputed?",
        "State Name", "Resolution Time(In days)", "Year", "QTR"
    ],
    "Tipo de Vari√°vel": [
        "Identificador", "Nominal", "Nominal", "Nominal", "Nominal", "Nominal",
        "Data", "Data", "Data", "Nominal",
        "Nominal", "Cont√≠nua", "Data", "Cont√≠nua"
    ]
}

#--------------------------------------------------

df_tipos = pd.DataFrame(dados_tipos)

# Exibindo no Streamlit
st.subheader("Classifica√ß√£o das Vari√°veis")
st.dataframe(df_tipos)


st.markdown("<h1 style='color: #2aa0d3;'>2Ô∏è‚É£Questionamentos e Hip√≥teses</h1>", unsafe_allow_html=True)

st.write("""
1. Qual o tempo m√©dio de resolu√ß√£o das reclama√ß√µes?
2. Quais os tr√™s estados com mais reclama√ß√µes?
3. Existe correla√ß√£o entre o estado e o tempo de reclama√ß√£o?
4. Qual o intervalo de confian√ßa que uma reclama√ß√£o ser√° respondida dentro do tempo m√©dio?
5. H0 Estados com mais reclama√ß√µes (State) t√™m tempos m√©dios de resolu√ß√£o maiores?
6. H0 Certos estados possuem mais reclama√ß√µes em determinado produtos?
""")
#-----------------------
st.divider()
#-----------------------
#tempo medio de resolu√ß√£o
st.markdown("""
    <h4 style="color: #2aa0d3;">Qual o tempo m√©dio de resolu√ß√£o das reclama√ß√µes?</h4>
    """, unsafe_allow_html=True)
media = df['Resolution time(in days)'].mean()
st.write(f"üîπ M√©dia do tempo de resolu√ß√£o: **{media:.2f} dias**")
#------------------------
st.divider()
#------------------------
#Estados mais reclamooes
st.markdown("""
    <h4 style="color: #2aa0d3;">Quais os tr√™s estados com mais reclama√ß√µes</h4>
    """, unsafe_allow_html=True)

st.subheader("üìå Top 3 Estados Com Maiores Consteta√ß√µes")
top_produtos = df["state name"].value_counts().head(3)
st.write(top_produtos)

# Filtrar o dataframe para conter s√≥ os top 10 produtos
produtos_filtrados = df[df["Product"].isin(top_produtos.index)]

# Agrupar para ver os principais motivos por produto
top_issues_por_produto = (
    produtos_filtrados
    .groupby(["Product", "Issue"])
    .size()
    .reset_index(name="Quantidade")
)


top_issues_por_produto = (
    top_issues_por_produto
    .sort_values(["Product", "Quantidade"], ascending=[True, False])
    .groupby("Product")
    .head(5)
)

#--------------------------------------------------
st.divider()
#--------------------------------------------------

st.markdown("""
    <h4 style="color: #2aa0d3;">Existe correla√ß√£o entre o estado e o tempo de reclama√ß√£o?</h4>
    """, unsafe_allow_html=True)

# Agrupar dados por estado (m√©dia de tempo e total de reclama√ß√µes)
df_estados = df.groupby('state name').agg(
    Tempo_Medio=('Resolution time(in days)', 'mean'),
    Total_Reclamacoes=('ID', 'count')
).reset_index()

# Calcular correla√ß√£o entre tempo m√©dio e volume de reclama√ß√µes
correlacao = df_estados[['Tempo_Medio', 'Total_Reclamacoes']].corr()

# Plot com Plotly (heatmap interativo)
fig = px.imshow(
    correlacao,
    text_auto=True,
    color_continuous_scale='Blues',
    labels=dict(x="Vari√°vel", y="Vari√°vel", color="Correla√ß√£o"),
    x=['Tempo M√©dio', 'Total Recl.'],
    y=['Tempo M√©dio', 'Total Recl.']
)
fig.update_layout(width=500, height=500)
st.plotly_chart(fig, use_container_width=True)

st.write(f"""üîπ   A an√°lise revelou uma correla√ß√£o insignificante (< 0.1) entre volume de reclama√ß√µes estaduais e tempo m√©dio de resolu√ß√£o. Isso pode sugerir que as pol√≠ticas de atendimento parecem ser homog√™neas entre estados """)